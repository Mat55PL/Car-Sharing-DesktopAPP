// <auto-generated />
using Car_SharingDesktopAPP.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Car_SharingDesktopAPP.Migrations
{
    [DbContext(typeof(UserDBContext))]
    partial class UserDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Car_SharingDesktopAPP.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDocumentsVerified")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rank")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "adam.kowalski@example.com",
                            FirstName = "Adam",
                            IsDocumentsVerified = true,
                            LastName = "Kowalski",
                            Login = "adam",
                            Password = "password123",
                            PhoneNumber = "123456789",
                            Rank = 0
                        },
                        new
                        {
                            Id = 2,
                            Email = "anna.nowak@example.com",
                            FirstName = "Anna",
                            IsDocumentsVerified = true,
                            LastName = "Nowak",
                            Login = "anna",
                            Password = "password456",
                            PhoneNumber = "987654321",
                            Rank = 2
                        },
                        new
                        {
                            Id = 3,
                            Email = "partyka@example.com",
                            FirstName = "Mateusz",
                            IsDocumentsVerified = true,
                            LastName = "Partyka",
                            Login = "matt",
                            Password = "testowe",
                            PhoneNumber = "555444333",
                            Rank = 99
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
